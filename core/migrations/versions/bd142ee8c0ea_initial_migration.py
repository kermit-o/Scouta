"""Initial migration

Revision ID: bd142ee8c0ea
Revises: 
Create Date: 2025-10-01 23:03:56.879269

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'bd142ee8c0ea'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('jobs_backup')
    op.alter_column('agent_runs', 'project_id',
               existing_type=sa.UUID(),
               type_=sa.String(),
               existing_nullable=False)
    op.create_foreign_key(None, 'agent_runs', 'projects', ['project_id'], ['id'])
    op.drop_column('agent_runs', 'updated_at')
    op.drop_column('agent_runs', 'created_at')
    op.alter_column('artifacts', 'project_id',
               existing_type=sa.UUID(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('artifacts', 'kind',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=30),
               nullable=False)
    op.alter_column('artifacts', 'path',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.String(length=512),
               nullable=False)
    op.alter_column('artifacts', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_nullable=True)
    op.create_foreign_key(None, 'artifacts', 'projects', ['project_id'], ['id'])
    op.drop_column('artifacts', 'artifact_type')
    op.drop_column('artifacts', 'content')
    op.drop_column('artifacts', 'file_path')
    op.alter_column('jobs', 'project_id',
               existing_type=sa.UUID(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('jobs', 'state',
               existing_type=sa.VARCHAR(length=20),
               server_default=None,
               existing_nullable=False)
    op.alter_column('jobs', 'attempts',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('jobs', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_nullable=True)
    op.alter_column('jobs', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_nullable=True)
    op.create_foreign_key(None, 'jobs', 'projects', ['project_id'], ['id'])
    op.alter_column('projects', 'specification',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('projects', 'state',
               existing_type=sa.VARCHAR(length=50),
               server_default=None,
               existing_nullable=True)
    op.alter_column('projects', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_nullable=True)
    op.alter_column('projects', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_nullable=True)
    op.alter_column('projects', 'plan_json',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('projects', 'technology_stack',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('projects', 'result',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('projects', 'status',
               existing_type=sa.VARCHAR(length=50),
               server_default=None,
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('projects', 'status',
               existing_type=sa.VARCHAR(length=50),
               server_default=sa.text("'pending'::character varying"),
               nullable=True)
    op.alter_column('projects', 'result',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('projects', 'technology_stack',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('projects', 'plan_json',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('projects', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_nullable=True)
    op.alter_column('projects', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_nullable=True)
    op.alter_column('projects', 'state',
               existing_type=sa.VARCHAR(length=50),
               server_default=sa.text("'created'::character varying"),
               existing_nullable=True)
    op.alter_column('projects', 'specification',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.drop_constraint(None, 'jobs', type_='foreignkey')
    op.alter_column('jobs', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_nullable=True)
    op.alter_column('jobs', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_nullable=True)
    op.alter_column('jobs', 'attempts',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.alter_column('jobs', 'state',
               existing_type=sa.VARCHAR(length=20),
               server_default=sa.text("'queued'::character varying"),
               existing_nullable=False)
    op.alter_column('jobs', 'project_id',
               existing_type=sa.String(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.add_column('artifacts', sa.Column('file_path', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.add_column('artifacts', sa.Column('content', postgresql.BYTEA(), autoincrement=False, nullable=True))
    op.add_column('artifacts', sa.Column('artifact_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'artifacts', type_='foreignkey')
    op.alter_column('artifacts', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_nullable=True)
    op.alter_column('artifacts', 'path',
               existing_type=sa.String(length=512),
               type_=sa.VARCHAR(length=500),
               nullable=True)
    op.alter_column('artifacts', 'kind',
               existing_type=sa.String(length=30),
               type_=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('artifacts', 'project_id',
               existing_type=sa.String(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.add_column('agent_runs', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('agent_runs', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'agent_runs', type_='foreignkey')
    op.alter_column('agent_runs', 'project_id',
               existing_type=sa.String(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.create_table('jobs_backup',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('project_id', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('agent', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('attempts', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('run_after', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_error', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True)
    )
    # ### end Alembic commands ###
