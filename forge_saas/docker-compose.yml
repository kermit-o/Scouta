
services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-forge}
      POSTGRES_USER: ${POSTGRES_USER:-forge}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-forge}
    volumes:
      - ./database/migrations:/docker-entrypoint-initdb.d
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-forge} -d ${POSTGRES_DB:-forge}"]
      interval: 5s
      timeout: 3s
      retries: 20

  backend:
    build: ./backend
    working_dir: /app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    environment:
      DATABASE_URL: ${DATABASE_URL}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY:-}
    volumes:
      - ./generated:/app/generated
      - ./backend:/app
      - ./logs:/logs
      - ./local_storage:/local_storage
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import urllib.request,sys; sys.exit(0 if urllib.request.urlopen('http://localhost:8000/api/health', timeout=2).status==200 else 1)\""]
      interval: 5s
      timeout: 3s
      retries: 30

  ui:
    build: ./ui
    working_dir: /app
    environment:
      API_URL: ${API_URL:-http://backend:8000}
    command: streamlit run app.py --server.port 8501 --server.address 0.0.0.0
    ports:
      - "8501:8501"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8501/ || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 30

volumes:
  pg_data:
