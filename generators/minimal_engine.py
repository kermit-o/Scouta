import os
import json

class MinimalTemplateEngine:
    def generate_react_project(self, project_name, description, output_dir="generated_projects"):
        """Genera un proyecto React m√≠nimo pero funcional"""
        
        project_path = os.path.join(output_dir, project_name)
        
        # Limpiar proyecto existente si existe
        if os.path.exists(project_path):
            import shutil
            shutil.rmtree(project_path)
        
        os.makedirs(project_path, exist_ok=True)
        
        print(f"üöÄ Generando proyecto: {project_name}")
        
        try:
            # 1. package.json
            package_data = {
                "name": project_name.lower().replace(" ", "-"),
                "version": "1.0.0",
                "description": description,
                "type": "module",
                "scripts": {
                    "dev": "vite",
                    "build": "vite build",
                    "preview": "vite preview"
                },
                "dependencies": {
                    "react": "^18.2.0",
                    "react-dom": "^18.2.0"
                },
                "devDependencies": {
                    "vite": "^4.4.0",
                    "@vitejs/plugin-react": "^4.0.0"
                }
            }
            
            with open(os.path.join(project_path, "package.json"), "w") as f:
                json.dump(package_data, f, indent=2)
            
            # 2. index.html
            index_html = f'''<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{project_name}</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>'''
            
            with open(os.path.join(project_path, "index.html"), "w") as f:
                f.write(index_html)
            
            # 3. Crear src/
            src_dir = os.path.join(project_path, "src")
            os.makedirs(src_dir, exist_ok=True)
            
            # main.jsx
            main_jsx = '''import React from 'react'
import ReactDOM from 'react-dom/client'
import App from './App.jsx'

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
)'''
            
            with open(os.path.join(src_dir, "main.jsx"), "w") as f:
                f.write(main_jsx)
            
            # App.jsx - M√çNIMO Y FUNCIONAL
            app_jsx = f'''import React, {{ useState }} from 'react'

function App() {{
  const [count, setCount] = useState(0)

  return (
    <div style={{{
      padding: '40px',
      textAlign: 'center',
      backgroundColor: '#f5f5f5',
      minHeight: '100vh'
    }}>
      <h1>üéâ {project_name}</h1>
      <p>{description}</p>
      
      <div style={{{
        margin: '20px',
        padding: '20px',
        backgroundColor: 'white',
        borderRadius: '8px',
        display: 'inline-block'
      }}>
        <button 
          onClick={{() => setCount(count + 1)}}
          style={{{
            padding: '10px 20px',
            fontSize: '16px',
            backgroundColor: '#007acc',
            color: 'white',
            border: 'none',
            borderRadius: '5px',
            cursor: 'pointer'
          }}
        >
          Count: {{count}}
        </button>
        <p>Generated by <strong>Forge SaaS</strong></p>
      </div>
    </div>
  )
}}

export default App'''
            
            with open(os.path.join(src_dir, "App.jsx"), "w") as f:
                f.write(app_jsx)
            
            # 4. vite.config.js
            vite_config = '''import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

export default defineConfig({
  plugins: [react()],
  server: {
    port: 3000
  }
})'''
            
            with open(os.path.join(project_path, "vite.config.js"), "w") as f:
                f.write(vite_config)
            
            print("‚úÖ package.json creado")
            print("‚úÖ index.html creado") 
            print("‚úÖ src/main.jsx creado")
            print("‚úÖ src/App.jsx creado")
            print("‚úÖ vite.config.js creado")
            
            print(f"\\nüéâ PROYECTO GENERADO: {project_path}")
            
            return {
                "project_path": project_path,
                "success": True
            }
            
        except Exception as e:
            print(f"‚ùå Error: {e}")
            return {
                "project_path": project_path,
                "error": str(e),
                "success": False
            }

if __name__ == "__main__":
    engine = MinimalTemplateEngine()
    result = engine.generate_react_project("Test Minimal", "Proyecto m√≠nimo funcional")
    if result["success"]:
        print("\\nüöÄ Para ejecutar:")
        print(f"cd {result['project_path']}")
        print("npm install")
        print("npm run dev")
